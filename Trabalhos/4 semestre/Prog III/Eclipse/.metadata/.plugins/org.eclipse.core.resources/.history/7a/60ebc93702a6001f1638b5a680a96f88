package repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import Main.PostgresConnection;
public class VehiclesRepository {
	Connection cone;
	
	public String getCone() {
		try {
			cone = new PostgresConnection().getConnection();
			return "Conectou";
		} catch (Exception e) {
			// TODO: handle exception
			return e.getMessage();
		}
	}
	
	public boolean createVehicle(String marca, String modelo, int ano) {
		String SQL = "INSERT INTO vehicles (marca, modelo, ano) VALUES ('fa', 'a', 123);";
        
        try (Connection connection = PostgresConnection.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(SQL)) {

            preparedStatement.setString(1, marca);
            preparedStatement.setString(2, modelo);
            preparedStatement.setInt(3, ano);
            
            int rowsAffected = preparedStatement.executeUpdate();

            return rowsAffected > 0;

        } catch (SQLException e) {
            System.err.println("Erro ao inserir veículo: " + e.getMessage());
            return false;
        }
	}
	
	 public static void getAllTables() {
	        String query = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'"; // Se for usar outro schema, substitua 'public' pelo nome do schema desejado.

	        try (Connection connection = PostgresConnection.getConnection();
	             Statement statement = connection.createStatement();
	             ResultSet resultSet = statement.executeQuery(query)) {

	            // Imprimir todas as tabelas
	            System.out.println("Tabelas no banco de dados:");
	            while (resultSet.next()) {
	                String tableName = resultSet.getString("table_name");
	                System.out.println(tableName);
	            }

	        } catch (SQLException e) {
	            System.err.println("Erro ao obter tabelas: " + e.getMessage());
	        }
	    }
	 
}
