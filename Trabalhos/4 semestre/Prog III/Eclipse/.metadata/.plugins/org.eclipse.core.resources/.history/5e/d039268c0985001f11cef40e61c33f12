package JogodaVelha;

import javax.swing.JPanel;
import net.miginfocom.swing.MigLayout;
import javax.swing.JLabel;

import java.util.Random;
import java.util.Stack;

import javax.swing.ImageIcon;
import javax.swing.JButton;

public class TelaJogo extends JPanel {

	/**
	 * Create the panel.
	 */
	public TelaJogo(Player p1, Player p2) {
		setLayout(new MigLayout("", "[grow][][][][grow]", "[grow][][][][][grow]"));
		
		JLabel txt_vezde = new JLabel("Vez de:");
		add(txt_vezde, "cell 1 0,alignx right");
		
		JLabel txt_ve = new JLabel("x ou o");
		add(txt_ve, "cell 2 0,alignx left");
		
		JLabel tab0x0 = new JLabel("");
		tab0x0.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab0x0, "cell 1 1");
		
		JLabel tab1x0 = new JLabel("");
		tab1x0.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab1x0, "cell 2 1,alignx center");
		
		JLabel tab2x0 = new JLabel("");
		tab2x0.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab2x0, "cell 3 1");
		
		JLabel tab0x1 = new JLabel("");
		tab0x1.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab0x1, "cell 1 2");
		
		JLabel tab1x1 = new JLabel("");
		tab1x1.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab1x1, "cell 2 2,alignx center");
		
		JLabel tab2x1 = new JLabel("");
		tab2x1.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab2x1, "cell 3 2");
		
		JLabel tab0x2 = new JLabel("");
		tab0x2.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab0x2, "cell 1 3");
		
		JLabel tab1x2 = new JLabel("");
		tab1x2.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab1x2, "cell 2 3,alignx center");
		
		JLabel tab2x2 = new JLabel("");
		tab2x2.setIcon(new ImageIcon(TelaJogo.class.getResource("/JogodaVelha/X - Copia.png")));
		add(tab2x2, "cell 3 3");
		
		JButton btn_refazer = new JButton("Refazer");
		add(btn_refazer, "cell 2 5");
		
		System.out.println("AFGDJG");

	}
	
	public void main() {
        Tabuleiro tab = new Tabuleiro();
        Random r = new Random();
        Stack<String[][]> pilha = new Stack<>();
        
        System.out.println();
        System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
        System.out.println("    jogadores   ");
        System.out.println(player_01.getName() + " : " + player_01.getSymbol());
        System.out.println(player_02.getName() + " : " + player_02.getSymbol());
        System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
        System.out.println();

        tab.create();
        boolean ve = true;
        while (ve) {
            pilha.push(tab.getCopy());

            tab.getBoard();

            System.out.println("Jogada de " + player_01.getName());
            System.out.println("Coordenada X (1, 2 ou 3): ");
            int x = e.nextInt();
            System.out.println("Coordenada Y (1, 2 ou 3): ");
            int y = e.nextInt();

            if (tab.shot(player_01, verifyPosition(y), verifyPosition(x))) {
                tab.getBoard();

                if (!tab.verify(player_01)) {
                    System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
                    System.out.println("    " + player_01.getName() + " ganhou!");
                    System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
                    break;
                }

                if (player_02.getIA()) {
                    boolean ia = true;
                    System.out.println(" ");
                    System.out.println("Jogada da IA");
                    System.out.println(" ");
                    Thread.sleep(2000);

                    while (ia) {
                        x = r.nextInt(3) + 1;
                        y = r.nextInt(3) + 1;
                        if (tab.shot(player_02, verifyPosition(x), verifyPosition(x))) {
                            System.out.println("");
                            ia = false;
                        } else {
                            x = r.nextInt(3) + 1;
                            y = r.nextInt(3) + 1;
                        }
                    }

                    tab.getBoard();
                    System.out.println("Deseja voltar uma jogada?");
                    if (verifyString(e.next())) {
                        tab.setTabuleiro(pilha.pop());
                    }

                } else {
                    System.out.println("Jogada de " + player_02.getName());
                    System.out.println("X (1, 2 ou 3): ");
                    int x2 = e.nextInt();
                    System.out.println("Y: ");
                    int y2 = e.nextInt();

                    while (!tab.shot(player_02, verifyPosition(y2), verifyPosition(x2))) {
                        tab.getBoard();
                        System.out.println("Jogada de " + player_02.getName());
                        System.out.println("X (1, 2 ou 3): ");
                        x2 = e.nextInt();
                        System.out.println("Y: ");
                        y2 = e.nextInt();
                    }
                }

                if (!tab.verify(player_02)) {
                    System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
                    System.out.println("    " + player_02.getName() + " ganhou!");
                    System.out.println("-=-=-=-=-=-=-=-=-=-=-=-=-=");
                    break;
                }

            }
            if (tab.draw()) {
                System.out.println("Empate!");
                break;

            }
        }
    }

    public static boolean verifyString(String bool) {
        bool = bool.toLowerCase();
        switch (bool) {
            case "sim":
                return true;
            case "s":
                return true;
            case "positivo":
                return true;
            case "sum":
                return true;
            case "som":
                return true;
            default:
                return false;
        }
    }

    public static int verifyPosition(int num) {
        if ((num >= 0) && (num <= 3)) {
            switch (num) {
                case 1:
                    return 0;
                case 2:
                    return 2;
                case 3:
                    return 4;
            }
        } else {
            System.out.println("Numero invalido!");
        }
        return 0;
    }
}
